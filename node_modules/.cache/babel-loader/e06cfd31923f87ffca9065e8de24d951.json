{"ast":null,"code":"import _slicedToArray from \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css';\nimport FolderForm from '../folderForm';\nimport NotesForm from '../notesForm';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      notes: [],\n      folders: []\n    };\n\n    _this.addNote = function (response) {\n      _this.state.notes.push(response);\n    };\n\n    _this.handleDeleteNote = function (noteId) {\n      _this.setState({\n        notes: _this.state.notes.filter(function (note) {\n          return note.id !== noteId;\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Promise.all([fetch(\"\".concat(config.API_ENDPOINT, \"/notes\")), fetch(\"\".concat(config.API_ENDPOINT, \"/folders\"))]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            notesRes = _ref2[0],\n            foldersRes = _ref2[1];\n\n        if (!notesRes.ok) return notesRes.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        if (!foldersRes.ok) return foldersRes.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return Promise.all([notesRes.json(), foldersRes.json()]);\n      }).then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            notes = _ref4[0],\n            folders = _ref4[1];\n\n        _this2.setState({\n          notes: notes,\n          folders: folders\n        });\n      }).catch(function (error) {\n        console.error({\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"renderNavRoutes\",\n    value: function renderNavRoutes() {\n      return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          component: NoteListNav,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/note/:noteId\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-folder\",\n        component: FolderForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-note\",\n        component: NotesForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderMainRoutes\",\n    value: function renderMainRoutes() {\n      return React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          component: NoteListMain,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/note/:noteId\",\n        component: NotePageMain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = {\n        notes: this.state.notes,\n        folders: this.state.folders,\n        deleteNote: this.handleDeleteNote,\n        addNote: this.addNote\n      };\n      return React.createElement(ApiContext.Provider, {\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"App__nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.renderNavRoutes()), React.createElement(\"header\", {\n        className: \"App__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Noteful\"), ' ', React.createElement(FontAwesomeIcon, {\n        icon: \"check-double\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), React.createElement(\"main\", {\n        className: \"App__main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.renderMainRoutes())));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/krystlenoweski/Krystle-Sophia-NoteFul/src/App/App.js"],"names":["React","Component","Route","Link","FontAwesomeIcon","NoteListNav","NotePageNav","NoteListMain","NotePageMain","ApiContext","config","FolderForm","NotesForm","App","state","notes","folders","addNote","response","push","handleDeleteNote","noteId","setState","filter","note","id","Promise","all","fetch","API_ENDPOINT","then","notesRes","foldersRes","ok","json","e","reject","catch","error","console","map","path","value","deleteNote","renderNavRoutes","renderMainRoutes"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css';\nimport FolderForm from '../folderForm'\nimport NotesForm from '../notesForm'\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\n    componentDidMount() {\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/notes`),\n            fetch(`${config.API_ENDPOINT}/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n\n                return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n                this.setState({notes, folders});\n            })\n            .catch(error => {\n                console.error({error});\n            });\n    }\n\n    addNote = response => {\n        this.state.notes.push(response)\n    }\n\n    handleDeleteNote = noteId => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== noteId)\n        });\n    };\n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={FolderForm} />\n                <Route path=\"/add-note\" component={NotesForm} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                {/* <Route path=\"/\" exact key=\"/\" component={NoteListMain}/>\n                <Route path=\"/folder/:folderId\" exact key=\"/folder/:folderId\" component={NoteListMain}/> */}\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\n            </>\n        );\n    }\n\n    render() {\n        const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            deleteNote: this.handleDeleteNote,\n            addNote: this.addNote\n        };\n        return (\n            <ApiContext.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                            <FontAwesomeIcon icon=\"check-double\" />\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}