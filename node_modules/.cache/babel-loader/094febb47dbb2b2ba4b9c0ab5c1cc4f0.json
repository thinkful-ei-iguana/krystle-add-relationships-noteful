{"ast":null,"code":"import _classCallCheck from \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/krystlenoweski/Krystle-Sophia-NoteFul/src/folderForm.js\";\nimport React from 'react';\nimport config from './config';\n\nvar FolderForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FolderForm, _React$Component);\n\n  function FolderForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FolderForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FolderForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      folderName: {\n        value: '',\n        touched: false\n      }\n    };\n\n    _this.setFolderName = function (folderName) {\n      _this.setState({\n        folderName: {\n          value: folderName,\n          touched: true\n        }\n      });\n    };\n\n    _this.validateFolderName = function () {\n      var folderName = _this.state.folderName.value.trim();\n\n      if (folderName === 0) {\n        return \"Folder Name is required\";\n      } else if (folderName.length < 1 || folderName.length > 12) {\n        return 'Folder Name must between 1 and 12 characters long';\n      }\n    };\n\n    _this.addFolder = function () {\n      var folderName = _this.state.folderName.value.trim();\n\n      fetch(\"\".concat(config.API_ENDPOINT, \"/folders\"), {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: folderName\n      }).then(function (response) {\n        return response.json();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FolderForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"folder-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Add Folder\", this.state.folderName.touched && React.createElement(\"p\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.validateFolderName())), React.createElement(\"input\", {\n        id: \"folder-name\",\n        type: \"text\",\n        value: this.state.folderName.value,\n        onChange: function onChange(e) {\n          return _this2.setFolderName(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        disabled: this.validateFolderName(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Submit Folder Name\"));\n    }\n  }]);\n\n  return FolderForm;\n}(React.Component);\n\nexport { FolderForm as default };","map":{"version":3,"sources":["/Users/krystlenoweski/Krystle-Sophia-NoteFul/src/folderForm.js"],"names":["React","config","FolderForm","state","folderName","value","touched","setFolderName","setState","validateFolderName","trim","length","addFolder","fetch","API_ENDPOINT","method","headers","Headers","body","then","response","json","e","target","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAEqBC,U;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,OAAO,EAAE;AAAtB;AADR,K;;UAGRC,a,GAAgB,UAAAH,UAAU,EAAI;AAC1B,YAAKI,QAAL,CAAc;AAAEJ,QAAAA,UAAU,EAAE;AAAEC,UAAAA,KAAK,EAAED,UAAT;AAAqBE,UAAAA,OAAO,EAAE;AAA9B;AAAd,OAAd;AACH,K;;UAGDG,kB,GAAqB,YAAM;AACvB,UAAIL,UAAU,GAAG,MAAKD,KAAL,CAAWC,UAAX,CAAsBC,KAAtB,CAA4BK,IAA5B,EAAjB;;AACA,UAAIN,UAAU,KAAK,CAAnB,EAAsB;AAClB,eAAO,yBAAP;AACH,OAFD,MAGK,IAAIA,UAAU,CAACO,MAAX,GAAoB,CAApB,IAAyBP,UAAU,CAACO,MAAX,GAAoB,EAAjD,EAAqD;AACtD,eAAO,mDAAP;AACH;AACJ,K;;UAEDC,S,GAAY,YAAM;AACd,UAAIR,UAAU,GAAG,MAAKD,KAAL,CAAWC,UAAX,CAAsBC,KAAtB,CAA4BK,IAA5B,EAAjB;;AACAG,MAAAA,KAAK,WAAIZ,MAAM,CAACa,YAAX,eACL;AACIC,QAAAA,MAAM,EAAE,MADZ;AAEIC,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,0BAAgB;AADC,SAAZ,CAFb;AAKIC,QAAAA,IAAI,EAAEd;AALV,OADK,CAAL,CAQCe,IARD,CAQM,UAAUC,QAAV,EAAoB;AACtB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAVD;AAWH,K;;;;;;;6BAGQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACC,KAAKlB,KAAL,CAAWC,UAAX,CAAsBE,OAAtB,IACD;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB,KAAKG,kBAAL,EAAtB,CAFA,CADJ,EAKI;AAAO,QAAA,EAAE,EAAC,aAAV;AAAwB,QAAA,IAAI,EAAC,MAA7B;AAAoC,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,UAAX,CAAsBC,KAAjE;AACI,QAAA,QAAQ,EAAE,kBAAAiB,CAAC;AAAA,iBAAI,MAAI,CAACf,aAAL,CAAmBe,CAAC,CAACC,MAAF,CAASlB,KAA5B,CAAJ;AAAA,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAOI;AAAQ,QAAA,QAAQ,EACZ,KAAKI,kBAAL,EADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAPJ,CADJ;AAaH;;;;EAjDmCT,KAAK,CAACwB,S;;SAAzBtB,U","sourcesContent":["import React from 'react';\nimport config from './config'\n\nexport default class FolderForm extends React.Component {\n    state = {\n        folderName: { value: '', touched: false}\n    };\n    setFolderName = folderName => {\n        this.setState({ folderName: { value: folderName, touched: true } });\n    };\n\n\n    validateFolderName = () => {\n        let folderName = this.state.folderName.value.trim();\n        if (folderName === 0) {\n            return \"Folder Name is required\"\n        }\n        else if (folderName.length < 1 || folderName.length > 12) {\n            return 'Folder Name must between 1 and 12 characters long'\n        }\n    }\n\n    addFolder = () => {\n        let folderName = this.state.folderName.value.trim();\n        fetch(`${config.API_ENDPOINT}/folders`,\n        {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            }),\n            body: folderName,\n        })\n        .then(function (response) {\n            return response.json();\n        })\n    }\n\n\n    render() {\n        return (\n            <form>\n                <label htmlFor=\"folder-name\">Add Folder\n                {this.state.folderName.touched &&\n                <p className=\"error\">{this.validateFolderName()}</p>}\n                </label>\n                <input id=\"folder-name\" type=\"text\" value={this.state.folderName.value}\n                    onChange={e => this.setFolderName(e.target.value)} />\n                <button disabled={\n                    this.validateFolderName()\n                }>Submit Folder Name</button>\n            </form>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}